{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Bem vindo ao projeto de Acompanhando Indicadores utilizando Streamlit e Docker para Deploy, a ideia geral deste projeto \u00e9 criar uma aplica\u00e7\u00e3o Streamlit onde podemos registrar os indicadores do Youtube e LinkedIn, assim poder monitorar a movimenta\u00e7\u00e3o nestas redes e realizar o deploy utilizando Docker.</p>"},{"location":"#stack-utilizada","title":"Stack Utilizada","text":"<ul> <li>Python</li> <li>Pyenv</li> <li>Poetry</li> <li>Pandas</li> <li>Pytest</li> <li>Black</li> <li>Isort</li> <li>Pre-Commit</li> <li>MkDocs</li> <li>Pip-Audit</li> <li>Pydocstyle</li> <li>Taskipy</li> <li>Docker</li> <li>Streamlit</li> </ul>"},{"location":"#clonando-o-projeto-com-docker","title":"Clonando o Projeto com Docker","text":"<ul> <li>Nesta etapa voc\u00ea precisa conter o Docker Instalado na sua maquina.</li> </ul>"},{"location":"#clone-o-repositorio","title":"Clone o reposit\u00f3rio:","text":"<pre><code>git clone https://github.com/luhborba/docker_streamlit_app.git\ncd docker_streamlit_app\n</code></pre>"},{"location":"#subindo-container","title":"Subindo Container:","text":"<pre><code>docker compose up -d\n</code></pre>"},{"location":"#acessando-aplicacao","title":"Acessando Aplica\u00e7\u00e3o:","text":"<pre><code>Acesse seu navegador 'localhost:8502'\n</code></pre>"},{"location":"#clonando-o-projeto-com-python","title":"Clonando o Projeto com Python","text":"<ul> <li>Caso n\u00e3o tenha <code>Pyenv e Proetry</code> instalado \u00e9 est\u00e1 usando ambiente Linux acesse Instalando Pyenv e Poetry (WSL/Linux)</li> <li>Caso o ambiente seja Windows, assista este v\u00eddeo Como instalar Python em 2024 + Pyenv, PIP, VENV, PIPX e Poetry</li> </ul>"},{"location":"#clone-o-repositorio_1","title":"Clone o reposit\u00f3rio:","text":"<pre><code>git clone https://github.com/luhborba/docker_streamlit_app.git\ncd docker_streamlit_app\n</code></pre>"},{"location":"#configure-a-versao-correta-do-python-com-pyenv","title":"Configure a vers\u00e3o correta do Python com <code>pyenv</code>","text":"<pre><code>pyenv install 3.11.7\npyenv local 3.11.7\n</code></pre>"},{"location":"#ativando-poetry","title":"Ativando Poetry","text":"<pre><code>poetry env use 3.11.7\npoetry shell\n</code></pre>"},{"location":"#insatalando-dependencias","title":"Insatalando depend\u00eancias","text":"<pre><code>poetry install\n</code></pre>"},{"location":"#rodando-streamlit","title":"Rodando Streamlit","text":"<pre><code>task run\n</code></pre>"},{"location":"#rodando-testes","title":"Rodando Testes","text":"<pre><code>task test\n</code></pre>"},{"location":"#rodando-documentacao","title":"Rodando Documenta\u00e7\u00e3o","text":"<pre><code>task docs\n</code></pre>"},{"location":"p2-database/","title":"Database","text":"<p>Aqui teremos toda conex\u00e3o com o Banco de Dados</p>"},{"location":"p2-database/#acessando-banco-e-inserindo-dados","title":"Acessando Banco e Inserindo Dados","text":"<p>Fun\u00e7\u00e3o de acesso e inser\u00e7\u00e3o no banco de dados.</p> <p>Parameters:</p> Name Type Description Default <code>visualizacao_youtube</code> <code>int</code> <p>N\u00famero de Visualizac\u0327a\u0303o Youtube.</p> required <code>inscricao_youtube</code> <code>int</code> <p>N\u00famero de Inscric\u0327a\u0303o Youtube.</p> required <code>visualacao_youtube_28dias</code> <code>int</code> <p>N\u00famero de Visualizac\u0327a\u0303o Youtube 28 dias.</p> required <code>visualizacao_youtube_48horas</code> <code>int</code> <p>N\u00famero de Visualizac\u0327a\u0303o Youtube 48 horas.</p> required <code>seguidores_linkedin</code> <code>int</code> <p>N\u00famero de Seguidores Linkedin.</p> required <code>impressoes_28dias</code> <code>int</code> <p>N\u00famero de Impressoes 28 dias.</p> required <code>impressores_90dias</code> <code>int</code> <p>N\u00famero de Impressores 90 dias.</p> required Source code in <code>src\\database.py</code> <pre><code>def conectar_banco(\n    visualizacao_youtube,\n    inscricao_youtube,\n    visualizacao_youtube_28dias,\n    visualizacao_youtube_48horas,\n    seguidores_linkedin,\n    impressoes_28dias,\n    impressores_90dias,\n):\n    \"\"\"\n    Fun\u00e7\u00e3o de acesso e inser\u00e7\u00e3o no banco de dados.\n\n    Args:\n        visualizacao_youtube (int): N\u00famero de Visualizac\u0327a\u0303o Youtube.\n        inscricao_youtube (int): N\u00famero de Inscric\u0327a\u0303o Youtube.\n        visualacao_youtube_28dias (int): N\u00famero de Visualizac\u0327a\u0303o Youtube 28 dias.\n        visualizacao_youtube_48horas (int): N\u00famero de Visualizac\u0327a\u0303o Youtube 48 horas.\n        seguidores_linkedin (int): N\u00famero de Seguidores Linkedin.\n        impressoes_28dias (int): N\u00famero de Impressoes 28 dias.\n        impressores_90dias (int): N\u00famero de Impressores 90 dias.\n    \"\"\"\n    try:\n        conexao = pg.connect(\n            dbname=\"mydatabase\", user=\"user\", password=\"password\", host=\"postgres\"\n        )\n        cursor = conexao.cursor()\n\n        cursor.execute(\n            \"\"\"\n                CREATE TABLE IF NOT EXISTS dados_redes_sociais (\n                    id SERIAL PRIMARY KEY,\n                    visualizacao_youtube INTEGER,\n                    inscricao_youtube INTEGER,\n                    visualizacao_youtube_28dias INTEGER,\n                    visualizacao_youtube_48horas INTEGER,\n                    seguidores_linkedin INTEGER,\n                    impressoes_28dias INTEGER,\n                    impressores_90dias INTEGER,\n                    data_envio TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n                )\n            \"\"\"\n        )\n        conexao.commit()\n        cursor.execute(\n            \"\"\"\n            INSERT INTO dados_redes_sociais (\n                visualizacao_youtube,\n                inscricao_youtube,\n                visualizacao_youtube_28dias,\n                visualizacao_youtube_48horas,\n                seguidores_linkedin,\n                impressoes_28dias,\n                impressores_90dias\n            ) VALUES (%s, %s, %s, %s, %s, %s, %s)\n            \"\"\",\n            (\n                visualizacao_youtube,\n                inscricao_youtube,\n                visualizacao_youtube_28dias,\n                visualizacao_youtube_48horas,\n                seguidores_linkedin,\n                impressoes_28dias,\n                impressores_90dias,\n            ),\n        )\n\n        conexao.commit()\n        st.success(\"Dados Salvos Com Sucesso!!!!\")\n        cursor.close()\n        conexao.close()\n\n    except Exception as e:\n        st.error(f\"Error ao se conectar com o banco {e}\")\n        cursor.close()\n        conexao.close()\n</code></pre>"},{"location":"p2-database/#listando-dados","title":"Listando Dados","text":"<p>Fun\u00e7\u00e3o de consulta no banco de dados.</p> Source code in <code>src\\database.py</code> <pre><code>def listar_dados():\n    \"\"\"Fun\u00e7\u00e3o de consulta no banco de dados.\"\"\"\n    try:\n        conexao = pg.connect(\n            dbname=\"mydatabase\", user=\"user\", password=\"password\", host=\"postgres\"\n        )\n        cursor = conexao.cursor()\n\n        cursor.execute(\"SELECT * FROM dados_redes_sociais\")\n        dados = cursor.fetchall()\n        return dados\n\n    except Exception as e:\n        st.error(f\"Error ao se conectar com o banco {e}\")\n\n    finally:\n        if \"conexao\" in locals():\n            conexao.close()\n        if \"cursor\" in locals():\n            cursor.close()\n</code></pre>"},{"location":"p3-app/","title":"Aplica\u00e7\u00e3o Streamlit","text":"<p>Aqui teremos a documenta\u00e7\u00e3o das fun\u00e7\u00f5es streamlit</p> <p>Fun\u00e7\u00e3o Principal de FrontEnd.</p> Source code in <code>src\\app.py</code> <pre><code>def main():\n    \"\"\"Fun\u00e7\u00e3o Principal de FrontEnd.\"\"\"\n    st.set_page_config(\n        page_title=\"App de Metas\",\n        page_icon=\":bar_chart:\",\n        layout=\"wide\",\n    )\n    st.title(\"Aplicativo de Acompanhamento de Meta\")\n\n    with st.expander(\"Cadastro de Acompanhamento: \"):\n        st.markdown(\"## Cadastro de Metas\")\n        st.write(\"Indicadores do Youtube\")\n        visualizacao_youtube = st.number_input(\n            \"N\u00ba de Visualizac\u0327a\u0303o Youtube\", min_value=0, step=1\n        )\n        inscricao_youtube = st.number_input(\n            \"N\u00ba de Inscric\u0327a\u0303o Youtube\", min_value=0, step=1\n        )\n        visualizacao_youtube_28dias = st.number_input(\n            \"N\u00ba de Visualizac\u0327a\u0303o Youtube 28 dias\", min_value=0, step=1\n        )\n        visualizacao_youtube_48horas = st.number_input(\n            \"N\u00ba de Visualizac\u0327a\u0303o Youtube 48 horas\", min_value=0, step=1\n        )\n        st.divider()\n        st.write(\"Indicadores do LinkedIn\")\n        seguidores_linkedin = st.number_input(\n            \"N\u00ba de Seguidores Linkedin\", min_value=0, step=1\n        )\n        impressoes_28dias = st.number_input(\n            \"N\u00ba de Impresso\u0303es 28 dias\", min_value=0, step=1\n        )\n        impressores_90dias = st.number_input(\n            \"N\u00ba de Impressores 90 dias\", min_value=0, step=1\n        )\n        enviar = st.button(\"Enviar Dados\")\n\n        if enviar:\n            try:\n                resposta = conectar_banco(\n                    visualizacao_youtube=visualizacao_youtube,\n                    inscricao_youtube=inscricao_youtube,\n                    visualizacao_youtube_28dias=visualizacao_youtube_28dias,\n                    visualizacao_youtube_48horas=visualizacao_youtube_48horas,\n                    seguidores_linkedin=seguidores_linkedin,\n                    impressoes_28dias=impressoes_28dias,\n                    impressores_90dias=impressores_90dias,\n                )\n            except Exception as e:\n                st.error(f\"Erro ao enviar dados: {e}\")\n\n    with st.expander(\"Lista de Dados Cadastrados:\"):\n        dados = listar_dados()\n        if dados:\n            nomes_colunas = [\n                \"ID\",\n                \"Visualiza\u00e7\u00f5es no Youtube\",\n                \"Inscritos no Youtube\",\n                \"Visualiza\u00e7\u00f5es no Youtube 28 dias\",\n                \"Visualiza\u00e7\u00f5es no Youtube 48 horas\",\n                \"Seguidores no Linkedin\",\n                \"Impress\u00f5es no 28 dias\",\n                \"Impressores no 90 dias\",\n                \"Data de Envio\",\n            ]\n            df = pd.DataFrame(dados[1:], columns=nomes_colunas)\n            st.write(\n                df\n            )  # Exibe o DataFrame pandasbe os dados em formato de tabela com os nomes das colunas\n        else:\n            st.write(\"Nenhum dado cadastrado ainda.\")\n</code></pre>"},{"location":"p4-tests/","title":"Testes","text":"<p>Nesta p\u00e1gina mostraremos brevemente como foi aplicado os testes.</p>"},{"location":"p4-tests/#teste-no-1","title":"Teste n\u00ba 1","text":"<p>Fun\u00e7\u00e3o de Teste para verificar se a aplica\u00e7\u00e3o est\u00e1 aberta.</p> Source code in <code>tests\\test_app.py</code> <pre><code>def test_app_open(driver):\n    \"\"\"Fun\u00e7\u00e3o de Teste para verificar se a aplica\u00e7\u00e3o est\u00e1 aberta.\"\"\"\n    driver.get(\"http://127.0.0.1:8501\")\n    sleep(3)\n</code></pre>"},{"location":"p4-tests/#test-no-2","title":"Test n\u00ba 2","text":"<p>Fun\u00e7\u00e3o de Teste para verificar o t\u00edtulo da aplica\u00e7\u00e3o.</p> Source code in <code>tests\\test_app.py</code> <pre><code>def test_app_title(driver):\n    \"\"\"Fun\u00e7\u00e3o de Teste para verificar o t\u00edtulo da aplica\u00e7\u00e3o.\"\"\"\n    driver.get(\"http://localhost:8501\")\n    sleep(5)\n    # Capturando T\u00edtulo\n    page_title = driver.title\n    # Verificando se o t\u00edtulo confere\n    title = \"App de Metas\"\n    assert page_title == title\n</code></pre>"}]}